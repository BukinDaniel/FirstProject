Способы работы с событиями
1. Использования атрибута HTML ( в любой html объект мы можем добавить атрибут, например onclick и присвоить ему какой-то JS код(например вывод чего-либо в консоль)
<button onclick="console.log('Hi!') type="button" и т.д.>
При клике на этот объект мы получим результат нашего кода. Но лучше всё же использовать JS в отдельном JS файле, работая с DOM.

2.Использование DOM объекта
Обращаемся к объекту через querySelector и помещаем это всё в const имяконст.
Далее:
button.onclick = function(){ // onclick здесь и есть обработчик события
	console.log('Hi!');}

Есть другой метод записи такого функционала:
function showConsole(){
	console.log('Hi!');}
button.onclick = showConsole; // важно, что без скобок, ибо если будут скобки - функция выполнится автоматически, а не по клику.

Недостаток такого метода - невозможность повесить несколько обработчиков на событие. Кажое новое назначение обработчика перезапишет предудыщее.
Для этого существует основной способ назначения обработчиков при помощи специальных методов addEventListener и removeEventListener, которые лишены этого недостатка.
Синтаксис имяобъекта.addEventListener (event, handler [, options]); event - событие, handler - функция без имени с кодом, который будет выполняться ( либо просто имя функции)
Пример:
const button = document.querySelector('.button');
button.addEventListener("click", function (e) {
	console.log('Hi!);});
button.addEventListener("click", function (e) {
	console.log('Peter!);});

Если же делать через отдельную функцию: 1. Описываем функцию и код. 2. Используем addEventListener. (не забыть перед этим обратится к объекту)