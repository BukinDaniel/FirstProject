Метрика элементов на странице.

//Получаем объект
const block = document.querySelector(.'lesson__block')
Внешними его метриками являются offsetLeft и offsetTop, которые вернут положение нашего объекта слева и сверху относительно ближайшего родительского (offsetParent).
const elementOffsetParent = block.offsetParent;
Это будет ближайший предок, который удовлетвояет следующим условиям:
1. Является css-позиционированным (css-свойство position равно absolute,relative и т.д)
2. теги td, th, table
3. body
console.log (elementOffsetParent);
Ситуации в которых offstParent равно null:
1. Для скрытых элементов (с css свойством display: none или когда его нет в документе)
2. Для элементов body и html.
3. Для элементов с position : fixed.

Получаем родительский элемент относительно которого позицианирован наш объект
const elementOffsetParent = block.offsetParent;
console.log(elementOffsetParent);
//Получаем позицию объекта относительно предка (offsetParent)
const elementOffsetLeft = block.offsetLeft;
const elementOffsetTop = block.offsetTop;
console.log(elementOffsetLeft);
console.log(elementOffsetTop);

//Получаем общие размеры объекта
const block = document.querySelector('.lesson__block');
// Как раз с помощью offsetWidth и offsetHeight
const elementOffsetWidth = block.offsetWidth;
const elementOffsetHeight = block.offsetHeight;
console.log(elementOffsetWidth);
console.log(elementOffsetHeight);

//Отступы внутренней части элементов от внешней с помощью clientTop и clientLeft
const block = document.querySelector('.lesson__block');
const elementclientTop = block.clientTop;
const elementclientLeft = block.clientLeft;
console.log(elementclientTop);
console.log(elementclientLeft);

//Размеры объекта без рамок и полосы прокрутки с помощью clientWidth и clientHeight
Синтаксис, как и в предыдущих двух примерах

//Размеры включающие в себя прокрученную (которую не было видно) часть. В Остальном работают как clientWidth и clientHeight.  Делается это с помощью scrollWidth и scrollHeight
Синтаксис, как и в предыдущих примерах

//Размеры прокрученной области с помощью scrollTop и scrollLeft.
Синтаксис, как и в предыдущих примерах. Эти свойства работают не только для чтения!(можно задать изначально прокрученную часть)

Методы управления прокруткой (scrollBy,scrollTo, scrollIntoView) работают и для объекта.

Получать размеры объектов стоит получать именно этими методами, а не getComputedStyle.

//Получаем кординаты относительно окна браузера с помощью getBoundClientRect();
const item = document.querySelector('.lesson__block');
const getItemCoords = item.getBoundClientRect();
console.log(getItemCoords);
Можно получить конкретную координату :
const getItemCoords = item.getBoundClientRect().left;

//Получаем координаты относительно документа
Чтобы это сделать нам к const getItemTopCoords = item.getBoundClientRect().Top; надо прибавить window.pageYOffset (количество прокрученных пикселей)
Так же и с Left и pageXOffset работает по горизонтали.

//Получаем объект по координатам с помощью document.elementFromPoint(x,y);
const elem = document.elementFromPoint(100,100);
Эти координаты считаются относительно окна браузера.